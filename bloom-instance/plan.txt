module.db.data.aws_iam_role.rds_service: Reading...
module.db.data.aws_iam_role.rds_service: Read complete after 0s [id=AWSServiceRoleForRDS]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.db.aws_db_instance.rds[0] will be created
  + resource "aws_db_instance" "rds" {
      + address                               = (known after apply)
      + allocated_storage                     = 20
      + apply_immediately                     = false
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + backup_retention_period               = 30
      + backup_window                         = "00:00-01:00"
      + ca_cert_identifier                    = (known after apply)
      + character_set_name                    = (known after apply)
      + copy_tags_to_snapshot                 = true
      + db_name                               = "bloom"
      + db_subnet_group_name                  = (known after apply)
      + delete_automated_backups              = false
      + deletion_protection                   = false
      + enabled_cloudwatch_logs_exports       = [
          + "postgresql",
          + "upgrade",
        ]
      + endpoint                              = (known after apply)
      + engine                                = "postgres"
      + engine_version                        = "13.8"
      + engine_version_actual                 = (known after apply)
      + final_snapshot_identifier             = "doorway-chriscasto"
      + hosted_zone_id                        = (known after apply)
      + iam_database_authentication_enabled   = true
      + id                                    = (known after apply)
      + identifier                            = (known after apply)
      + identifier_prefix                     = "doorway-chriscasto"
      + instance_class                        = "db.t3.micro"
      + iops                                  = (known after apply)
      + kms_key_id                            = (known after apply)
      + latest_restorable_time                = (known after apply)
      + license_model                         = (known after apply)
      + maintenance_window                    = (known after apply)
      + max_allocated_storage                 = 50
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + multi_az                              = (known after apply)
      + name                                  = (known after apply)
      + nchar_character_set_name              = (known after apply)
      + network_type                          = "IPV4"
      + option_group_name                     = (known after apply)
      + parameter_group_name                  = (known after apply)
      + password                              = (sensitive value)
      + performance_insights_enabled          = false
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = 5432
      + publicly_accessible                   = false
      + replica_mode                          = (known after apply)
      + replicas                              = (known after apply)
      + resource_id                           = (known after apply)
      + skip_final_snapshot                   = false
      + snapshot_identifier                   = (known after apply)
      + status                                = (known after apply)
      + storage_throughput                    = (known after apply)
      + storage_type                          = "gp3"
      + tags_all                              = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
      + timezone                              = (known after apply)
      + username                              = "doorway"
      + vpc_security_group_ids                = (known after apply)
    }

  # module.db.aws_db_subnet_group.db will be created
  + resource "aws_db_subnet_group" "db" {
      + arn                     = (known after apply)
      + description             = "Managed by Terraform"
      + id                      = (known after apply)
      + name                    = (known after apply)
      + name_prefix             = "doorway-chriscasto"
      + subnet_ids              = (known after apply)
      + supported_network_types = (known after apply)
      + tags_all                = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
    }

  # module.db.aws_secretsmanager_secret.conn_string will be created
  + resource "aws_secretsmanager_secret" "conn_string" {
      + arn                            = (known after apply)
      + force_overwrite_replica_secret = false
      + id                             = (known after apply)
      + name                           = (known after apply)
      + name_prefix                    = "doorway-chriscasto/db/"
      + policy                         = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = [
                          + "secretsmanager:GetSecretValue",
                        ]
                      + Effect    = "Allow"
                      + Principal = "*"
                      + Resource  = "*"
                      + Sid       = "EnableSecretRetrieval"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + recovery_window_in_days        = 30
      + rotation_enabled               = (known after apply)
      + rotation_lambda_arn            = (known after apply)
      + tags_all                       = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }

      + replica {
          + kms_key_id         = (known after apply)
          + last_accessed_date = (known after apply)
          + region             = (known after apply)
          + status             = (known after apply)
          + status_message     = (known after apply)
        }

      + rotation_rules {
          + automatically_after_days = (known after apply)
        }
    }

  # module.db.aws_secretsmanager_secret_version.conn_string will be created
  + resource "aws_secretsmanager_secret_version" "conn_string" {
      + arn            = (known after apply)
      + id             = (known after apply)
      + secret_id      = (known after apply)
      + secret_string  = (sensitive value)
      + version_id     = (known after apply)
      + version_stages = (known after apply)
    }

  # module.db.aws_security_group.db will be created
  + resource "aws_security_group" "db" {
      + arn                    = (known after apply)
      + description            = "Enable access to doorway-chriscasto database"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = "doorway-chriscasto-db"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
      + vpc_id                 = (known after apply)
    }

  # module.db.random_password.password[0] will be created
  + resource "random_password" "password" {
      + bcrypt_hash = (sensitive value)
      + id          = (known after apply)
      + length      = 16
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (sensitive value)
      + special     = false
      + upper       = true
    }

  # module.network.aws_vpc.vpc will be created
  + resource "aws_vpc" "vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "doorway-chriscasto:default"
        }
      + tags_all                             = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Name"        = "doorway-chriscasto:default"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
    }

  # module.network.module.app.aws_subnet.subnets["0"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "doorway-chriscasto:App 0"
        }
      + tags_all                                       = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Name"        = "doorway-chriscasto:App 0"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.app.aws_subnet.subnets["1"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "doorway-chriscasto:App 1"
        }
      + tags_all                                       = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Name"        = "doorway-chriscasto:App 1"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.data.aws_subnet.subnets["0"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.4.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "doorway-chriscasto:Data 0"
        }
      + tags_all                                       = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Name"        = "doorway-chriscasto:Data 0"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.data.aws_subnet.subnets["1"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.5.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "doorway-chriscasto:Data 1"
        }
      + tags_all                                       = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Name"        = "doorway-chriscasto:Data 1"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.public.aws_subnet.subnets["0"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "doorway-chriscasto:Public 0"
        }
      + tags_all                                       = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Name"        = "doorway-chriscasto:Public 0"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.public.aws_subnet.subnets["1"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "doorway-chriscasto:Public 1"
        }
      + tags_all                                       = {
          + "Application" = "Bloom Housing Instance"
          + "Environment" = "dev"
          + "Name"        = "doorway-chriscasto:Public 1"
          + "Project"     = "Doorway"
          + "Team"        = "doorway"
          + "Workspace"   = "chriscasto"
        }
      + vpc_id                                         = (known after apply)
    }

Plan: 13 to add, 0 to change, 0 to destroy.

Warning: Resource targeting is in effect

You are creating a plan with the -target option, which means that the result of this plan may not represent all of the changes requested by the current configuration.

The -target option is not for routine use, and is provided only for exceptional situations such as recovering from errors or mistakes, or when Terraform specifically suggests to use it as part of an error message.

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
